/*
Telemetry

Common Fate error logging API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telemclient

import (
	"encoding/json"
)

// TelemError struct for TelemError
type TelemError struct {
	Data map[string]interface{} `json:"data,omitempty"`
}

// NewTelemError instantiates a new TelemError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemError() *TelemError {
	this := TelemError{}
	return &this
}

// NewTelemErrorWithDefaults instantiates a new TelemError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemErrorWithDefaults() *TelemError {
	this := TelemError{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TelemError) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemError) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TelemError) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *TelemError) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o TelemError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableTelemError struct {
	value *TelemError
	isSet bool
}

func (v NullableTelemError) Get() *TelemError {
	return v.value
}

func (v *NullableTelemError) Set(val *TelemError) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemError) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemError(val *TelemError) *NullableTelemError {
	return &NullableTelemError{value: val, isSet: true}
}

func (v NullableTelemError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


